[FUNCTION f_resource_replace_repair]//argn1 = item, argn2 = resource to search for, argn3 = resource to replace with
//this function returns a resource list with the specified resource replaced with another
LOCAL.I=1
WHILE (<SERV.ITEMDEF.<ARGV[0]>.RESOURCES.<LOCAL.I>.VAL>)
	FLOAT.RESN=<SERV.ITEMDEF.<ARGV[0]>.RESOURCES.<LOCAL.I>.VAL>
	FLOAT.RESN=<FLOATVAL <FLOAT.RESN>-(<FLOAT.RESN>*<VAR.DAMAGEPERCENT>)>
	LOCAL.RESN=<FLOAT.RESN>
	LOCAL.RESN=<EVAL <LOCAL.RESN>/1200000>
	IF (<EVAL <LOCAL.RESN>><1) 
		LOCAL.RESN=1
	ENDIF 
	IF (<SERV.ITEMDEF.<ARGV[0]>.RESOURCES.<LOCAL.I>.KEY>==<ARGV[1]>)
		LOCAL.RETURN=<LOCAL.RETURN>, <LOCAL.RESN> <ARGV[2]>
	ELSE
		LOCAL.RETURN=<LOCAL.RETURN>, <LOCAL.RESN> <SERV.ITEMDEF.<ARGV[0]>.RESOURCES.<LOCAL.I>.KEY>
	ENDIF
	LOCAL.I += 1
ENDWHILE
RETURN <STREAT <LOCAL.RETURN>>




[FUNCTION RepairItem] 
TARGETF f_repair Target an item to repair. 
 
[FUNCTION f_repair]
IF (<ARGO.tag0.MATERIAL>)
	LOCAL.SKILLMOD = <DEF.SKMENU_SUBRES_<ARGO.tag0.MATERIAL>_SKILL>
ELSE
	LOCAL.SKILLMOD = 0
ENDIF

LOCAL.SKILL=<ARGO.SKILLMAKE.1.KEY>
LOCAL.DIFF=<eval <ARGO.SKILLMAKE.1.VAL>+<LOCAL.SKILLMOD>>

IF (<ARGO.HITPOINTS>)
	VAR.DAMAGEPERCENT=<FLOATVAL <ARGO.HITS> / <ARGO.MAXHITS>>
ELSEIF (<ARGO.TAG0.HITS>)
	VAR.DAMAGEPERCENT=<FLOATVAL <ARGO.TAG0.HITS> / <ARGO.TAG0.MAXHITS>>
ELSE
	SRC.SYSMESSAGE You can't repair that.  
	RETURN 1 
ENDIF


IF (<ARGO.ISCHAR>) 
	SRC.SYSMESSAGE You can't repair that.  
	RETURN 1 
ELSEIF !(<ARGO.CONT.UID> = <SRC.FINDLAYER(21).UID>) 
	SRC.SYSMESSAGE The item must be in your backpack to repair it.  
	RETURN 1 
ELSEIF (<ARGO.HITS> >= <ARGO.MAXHITS>) 
	SRC.SYSMESSAGE The item is already in full repair. 
	RETURN 1 
ELSEIF ((<LOCAL.DIFF>/2) >= <src.<serv.skill(<LOCAL.SKILL>).name>>) 
	SRC.SYSMESSAGE That is beyond your ability to repair.
	RETURN 1 
ELSEIF (<LOCAL.SKILL>==skill_blacksmith) && !<isneartype t_anvil 2>
	src.sysmessage This requires an anvil to repair.
	RETURN 1 
ENDIF

IF (<ARGO.tag0.MATERIAL>)
	LOCAL.RESOURCES=<f_resource_replace_repair <ARGO.BASEID>,<ARGO.tag0.BASEMATERIAL>,<ARGO.tag0.MATERIAL>>
ELSE
	LOCAL.RESOURCES=<f_resource_replace_repair <ARGO.BASEID>,i_gold,i_gold>
ENDIF

IF !(<SRC.RESTEST <LOCAL.RESOURCES>>)
	SRC.SYSMESSAGE You don't have the resources required to repair that item.
	RETURN 1
ENDIF
SRC.CONSUME <LOCAL.RESOURCES>

	IF <src.skillcheck <serv.skill(<LOCAL.SKILL>).name> <EVAL <LOCAL.DIFF>/10>>
		IF (<ARGO.HITPOINTS>)
			ARGO.HITS=<ARGO.MAXHITS>
		ELSEIF (<ARGO.TAG0.HITS>)
			ARGO.TAG0.HITS=<ARGO.TAG0.MAXHITS>
		ENDIF
		ARGO.RESENDTOOLTIP 
		SRC.SYSMESSAGE You repair the <ARGO.name>.
		src.skillgain <serv.skill(<LOCAL.SKILL>).name> <EVAL <LOCAL.DIFF>/10>
	ELSE
		SRC.SYSMESSAGE You fail to repair the <ARGO.name>.
		src.skillgain <serv.skill(<LOCAL.SKILL>).name> <EVAL <LOCAL.DIFF>/10>
	ENDIF
Return 1


[FUNCTION NPC_RepairItem]
IF !(<ARGO.CONT.UID> = <SRC.FINDLAYER(21).UID>) 
	SRC.SYSMESSAGE The item must be in your backpack to repair it.  
	RETURN 1 
ENDIF
OBJ=<SRC.TAG.VENDORUSED>
IF (<OBJ.tag0.VENDORMARKUP>==0)
	IF (<REGION.TAG0.VENDORMARKUP>)
		OBJ.TAG0.VENDORMARKUP =<REGION.tag0.VENDORMARKUP>
	ELSE
		OBJ.TAG0.VENDORMARKUP = 15
	ENDIF
ENDIF
IF (<OBJ.tag0.INFLATION>==0)
	IF (<REGION.TAG0.INFLATION>)
		OBJ.TAG0.INFLATION =<REGION.tag0.INFLATION>
	ELSE
		OBJ.TAG0.INFLATION = 100
	ENDIF
ENDIF
SRC.tag0.LOCALCURRENCY=<OBJ.TAG0.LOCALCURRENCY>
SRC.tag0.CURRENCY_1=<OBJ.TAG0.CURRENCY_1>
SRC.tag0.CURRENCY_2=<OBJ.TAG0.CURRENCY_2>
SRC.tag0.CURRENCY_3=<OBJ.TAG0.CURRENCY_3>
SRC.tag0.CURRENCY_4=<OBJ.TAG0.CURRENCY_4>
SRC.tag0.CURRENCY_5=<OBJ.TAG0.CURRENCY_5>
SRC.tag0.CURRENCY_6=<OBJ.TAG0.CURRENCY_6>
SRC.tag0.CURRENCY_7=<OBJ.TAG0.CURRENCY_7>
SRC.tag0.CURRENCY_8=<OBJ.TAG0.CURRENCY_8>
SRC.tag0.CURRENCY_9=<OBJ.TAG0.CURRENCY_9>
SRC.tag0.CURRENCY_10=<OBJ.TAG0.CURRENCY_10>
SRC.tag0.CURRENCY_11=<OBJ.TAG0.CURRENCY_11>
SRC.tag0.CURRENCY_12=<OBJ.TAG0.CURRENCY_12>
SRC.tag0.CURRENCY_13=<OBJ.TAG0.CURRENCY_13>
SRC.tag0.CURRENCY_14=<OBJ.TAG0.CURRENCY_14>
SRC.tag0.CURRENCY_15=<OBJ.TAG0.CURRENCY_15>
SRC.tag0.CURRENCY_16=<OBJ.TAG0.CURRENCY_16>
SRC.tag0.CURRENCY_17=<OBJ.TAG0.CURRENCY_17>
SRC.tag0.CURRENCY_18=<OBJ.TAG0.CURRENCY_18>
SRC.tag0.CURRENCY_19=<OBJ.TAG0.CURRENCY_19>
SRC.tag0.CURRENCY_20=<OBJ.TAG0.CURRENCY_20>
IF (<ARGO.tag0.MATERIAL>)
	LOCAL.SKILLMOD = <DEF.SKMENU_SUBRES_<ARGO.tag0.MATERIAL>_SKILL>
ELSE
	LOCAL.SKILLMOD = 0
ENDIF
LOCAL.SKILL=<ARGO.SKILLMAKE.1.KEY>
LOCAL.DIFF=<eval <ARGO.SKILLMAKE.1.VAL>+<LOCAL.SKILLMOD>>
IF ((<LOCAL.DIFF>/2) > <OBJ.<serv.skill(<LOCAL.SKILL>).name>>)
	OBJ.L I cannot repair that.
	RETURN 1
ENDIF

IF (<ARGO.HITPOINTS>)
	LOCAL.PERCENT = 100-<MulDiv <ARGO.HITS>,100,<ARGO.MAXHITS>>
ELSEIF (<ARGO.TAG0.HITS>)
	LOCAL.PERCENT = 100-<MulDiv <ARGO.TAG0.HITS>,100,<ARGO.TAG0.MAXHITS>>
ELSE
	SRC.SYSMESSAGE You can't repair that.  
	RETURN 1 
ENDIF

LOCAL.COST = <MulDiv <eval (((<ARGO.TAG0.MODVALUE>+5+<ARGO.VALUE>)*(100+<eval <obj.tag0.VENDORMARKUP>>)*<eval <obj.tag0.INFLATION>>)/10000)>,<LOCAL.PERCENT>,100>
IF (<SRC.currency> >= <LOCAL.COST>)
		src.consumecurrencylocal <LOCAL.COST>
		IF (<ARGO.HITPOINTS>)
			ARGO.HITS=<ARGO.MAXHITS>
		ELSEIF (<ARGO.TAG0.HITS>)
			ARGO.TAG0.HITS=<ARGO.TAG0.MAXHITS>
		ENDIF
		ARGO.RESENDTOOLTIP 
		OBJ.L It's repaired for <eval <local.cost>>c.
ELSE
		OBJ.L You cannot afford this, I need <eval <local.cost>>c.
ENDIF
SRC.TAG.VENDORUSED=
src.rvar
RETURN


[eof]